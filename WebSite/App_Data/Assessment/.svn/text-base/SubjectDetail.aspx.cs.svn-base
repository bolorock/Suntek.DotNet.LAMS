#region Description
/*================================================================================
 *  Copyright (c) SunTek.  All rights reserved.
 * ===============================================================================
 * Solution: AuthorizeCenter
 * Module:  Assessment
 * Descrption:
 * CreateDate: 2010-12-22 21:27:00
 * Author: ljz
 * Version:1.0
 * ===============================================================================
 * History
 *
 * Update Descrption:
 * Remark:
 * Update Time:
 * Author:generated by codesmithTemplate
 * 
 * ===============================================================================*/
#endregion
using System;
using System.Collections.Generic;
using System.Linq;
using System.Web;
using System.Web.UI;
using System.Web.UI.WebControls;
using System.Reflection;

using log4net;
using Newtonsoft.Json;
using Microsoft.Practices.Unity;
using EAFrame.Core;
using EAFrame.Core.Enums;
using EAFrame.Core.Service;
using EAFrame.Core.Security;
using EAFrame.Core.Extensions;
using EAFrame.Core.Web;
using EAFrame.Core.Caching;
using EAFrame.Core.Utility;
using EAFrame.Core.FastInvoker;
using EAFrame.WebControls;
using SunTek.EAFrame.AuthorizeCenter.Domain;
using SunTek.EAFrame.AuthorizeCenter.Service;
using SunTek.Assessment.Domain;
using SunTek.Assessment.Service;

namespace WebSite
{
    public partial class SubjectDetail : BasePage
    {
        private SubjectService subjectService=new SubjectService();
		
		#region ---界面处理方法---

       	protected bool ShowPageDetail()
        {

            cboSubjectType.IsSingle = true;
            cboSubjectType.BindCombox(SubjectType.Radio);

            cboCategory.IsSingle = true;
            cboCategory.BindCombox(SubjectCategory.FullTest);


			
            Subject entity =subjectService.GetDomain(CurrentId);
            if (entity == null) return false;

			SetControlValues(entity);

            rptSubjectItem.DataSource = new SubjectItemService().All().Where(o => o.SubjectID.Equals(entity.ID, StringComparison.OrdinalIgnoreCase)).OrderBy(p=>p.SortOrder).ToList();
            rptSubjectItem.DataBind();

            rptSubSubject.DataSource = subjectService.All().Where(o => o.ParentID.Equals(entity.ID, StringComparison.OrdinalIgnoreCase)).OrderBy(p => p.SortOrder).ToList();
            rptSubSubject.DataBind();

            return true;
        }
        protected void Page_Load(object sender, EventArgs e)
        {
            if (!IsPostBack && !IsAjaxPost)
            {
                ShowPageDetail();
            }
        }
		#endregion
		
		#region ---操作处理方法---
		protected Subject GetDomainObject()
		{
            Subject  subject = subjectService.GetDomain(CurrentId);

            if (subject == null)
            {
                subject = new Subject();
				subject.ID=CurrentId;
            }

			GetControlValues(ref subject);	
			
            return subject;
		}


        public string Save(string argument)
        {
            AjaxResult ajaxResult = new AjaxResult();

            string errorMsg = string.Empty;
            ActionResult actionResult = ActionResult.Failed;
            string actionMessage = string.Empty;
            try
            {
                Subject subject = JsonConvert.DeserializeObject<Subject>(argument);
                subject.ID = string.IsNullOrEmpty(CurrentId) ? CurrentId = IdGenerator.NewComb().ToString() : CurrentId;

                foreach (var subjectItem in subject.SubjectItems)
                {
                    subjectItem.ID = string.IsNullOrWhiteSpace(subjectItem.ID) ? IdGenerator.NewComb().ToString() : subjectItem.ID;
                }
                subjectService.SaveOrUpdate(subject);
                actionResult = ActionResult.Success;

                //获取提示信息
                actionMessage = RemarkAttribute.GetEnumRemark(actionResult);

                //记录操作日志
                AddActionLog(subject, PageContext.Action, actionResult, actionMessage);

                ajaxResult.ActionResult = actionResult;
                ajaxResult.RetValue = subject.ID;
                ajaxResult.PromptMsg = actionMessage;
            }
            catch (Exception ex)
            {
                actionMessage = RemarkAttribute.GetEnumRemark(actionResult);
                log.Error(actionMessage, ex);
            }

            return JsonConvert.SerializeObject(ajaxResult);
        }

		#endregion
    }
}
