#region Description
/*================================================================================
 *  Copyright (c) SunTek.  All rights reserved.
 * ===============================================================================
 * Solution: Infrastructure
 * Module:  Dict
 * Descrption:
 * CreateDate: 2010/11/18 13:40:10
 * Author: trenhui
 * Version:1.0
 * ===============================================================================
 * History
 *
 * Update Descrption:
 * Remark:
 * Update Time:
 * Author:generated by codesmithTemplate
 * 
 * ===============================================================================*/
#endregion
using System;
using System.Data;
using System.Collections.Generic;
using log4net;

using EAFrame.Core;
using EAFrame.Core.Data;
using EAFrame.Core.Caching;
using EAFrame.Core.Service;
using EAFrame.Core.Enums;
using EAFrame.Core.DataFilter;
using SunTek.EAFrame.Infrastructure.Domain;

namespace SunTek.EAFrame.Infrastructure.Service
{
    public class DictService : BaseService<string, Dict>
    {
        #region Fields
        private readonly ILog log = LogManager.GetLogger(typeof(DictService));
        #endregion

        #region Constructors

        public DictService() { }
        #endregion

        #region IDictService Imp
        /// <summary>
        /// 获取字典
        /// </summary>
        /// <param name="dictName">字典名</param>
        /// <returns></returns>
        public IList<DictItem> GetDictItems(string dictName)
        {
            IDictionary<string, object> parameters = new Dictionary<string, object>();
            parameters.Add("Name", dictName);
            Dict dict = repository.FindOne<Dict>(parameters);
            if (dict != null)
            {
                string dictID = dict.ID;
                parameters.Clear();
                parameters.Add("DictID", dictID);
                return repository.FindAll<DictItem>(parameters);
            }
            else
            {
                return null;
            }
        }

        /// <summary>
        /// 获取字典项值
        /// </summary>
        /// <param name="dictName">字典项名</param>
        /// <returns></returns>
        public string GetDictItemText(string dictItemValue, string defaultValue = "EAFrame")
        {
            IDictionary<string, object> parameters = new Dictionary<string, object>();
            parameters.Add("Value", dictItemValue);
            DictItem item = repository.FindOne<DictItem>(parameters);

            return item != null ? item.Text : defaultValue;
        }
        #endregion

        #region Internal Methods
        public override void SaveOrUpdate(Dict domain)
        {
            using (Transaction trans = UnitOfWork.BeginTransaction(typeof(Dict)))
            {
                repository.SaveOrUpdate(domain);

                foreach (var item in domain.DictItems)
                    repository.SaveOrUpdate(item);

                trans.Commit();
            }
        }
        #endregion
    }
}