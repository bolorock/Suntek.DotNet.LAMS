#region Description
/*================================================================================
 *  Copyright (c) SunTek.  All rights reserved.
 * ===============================================================================
 * Solution: Assessment
 * Module:  Survey
 * Descrption:
 * CreateDate: 2010/11/18 14:01:00
 * Author: trenhui
 * Version:1.0
 * ===============================================================================
 * History
 *
 * Update Descrption:
 * Remark:
 * Update Time:
 * Author:generated by codesmithTemplate
 * 
 * ===============================================================================*/
#endregion
using System;
using System.Collections.Generic;
using System.Linq;
using System.Web;
using System.Web.UI;
using System.Web.UI.WebControls;
using System.Reflection;
using System.Text;

using log4net;
using Microsoft.Practices.Unity;
using EAFrame.Core;
using EAFrame.Core.Enums;
using EAFrame.Core.Service;
using EAFrame.Core.Security;
using EAFrame.Core.Extensions;
using EAFrame.Core.Web;
using EAFrame.Core.Caching;
using EAFrame.Core.Utility;
using EAFrame.Core.FastInvoker;
using EAFrame.WebControls;
using SunTek.Assessment.Domain;
using SunTek.Assessment.Service;

using SunTek.EAFrame.AuthorizeCenter.Domain;
using SunTek.EAFrame.AuthorizeCenter.Service;
using Newtonsoft.Json;
using System.Data;

using EAFrame.Core.Data;
using EAFrame.Core.DataFilter;

namespace WebSite
{
    public partial class SurveyDetail : BasePage
    {
        private SurveyService surveyService=new SurveyService();
        private SurveyResultService surveyResultService = new SurveyResultService();
		
		#region ---界面处理方法---

       	protected bool ShowPageDetail()
        {
			if (PageContext.Action == ActionType.Add)
			{
				dtpEndTime.Text=DateTime.Now.ToShortDateString();
				//dtpCreateTime.Text=DateTime.Now.ToShortDateString();
				return false;
			}

            cboCategory.IsSingle = true;
            cboCategory.BindCombox(SubjectCategory.FullTest);

            Survey entity =surveyService.GetDomain(CurrentId);
			
            if (entity == null) return false;
            hidSurveyStatus.Value = entity.Status.ToString();//测评状态;
          
			SetControlValues(entity);
            ExamPaper examPaper = new ExamPaperService().GetDomain(entity.ExamPaperID);
            if (examPaper != null)
            {
                chbExamPaperID.Text = examPaper.Title;
                chbExamPaperID.Value = examPaper.ID;
            }
			return true;
        }



        /// <summary>
        /// 初始化页面
        /// </summary>
        /// <param name="e"></param>
        protected override void OnInit(EventArgs e)
        {
            base.OnInit(e);
            gvList.PageChanged += new PagedGridView.PagintEventHandler(gvList_PageChanged);
        }

        void gvList_PageChanged(object sender, PagingArgs e)
        {
            ShowList(gvList, new PageInfo(e.PageIndex, e.PageSize, e.ItemCount));
        }

        protected void Page_Load(object sender, EventArgs e)
        {
            if (!IsPostBack && !IsAjaxPost)
            {
                ShowList(gvList,new PageInfo(gvList.PageIndex, gvList.PageSize, gvList.ItemCount));
            }
            ShowPageDetail();
        }

        public void ShowList(PagedGridView gvList, PageInfo pageInfo)
        {
           // IDictionary<string, object> parameters = GetFilterParameters();
            DataTable dt = surveyResultService.GetSurveyResult(CurrentId, pageInfo);
            gvList.IncludeRowDoubleClick = false;
            gvList.ItemCount = pageInfo.ItemCount;
            gvList.DataSource = dt;
            gvList.DataBind();

        }

        protected void cmdRefresh_Click(object sender, EventArgs e)
        {
            ShowList(gvList, new PageInfo(1, gvList.PageSize, gvList.ItemCount));
        }
		#endregion
		
		#region ---操作处理方法---
		protected Survey GetDomainObject()
		{
            Survey  survey = surveyService.GetDomain(CurrentId);

            if (survey == null)
            {
                survey = new Survey();
				survey.ID=CurrentId;
            }

			GetControlValues(ref survey);	
			
            return survey;
		}

        /// <summary>
        /// 保存数据
        /// </summary>
        /// <param name="argument"></param>
        /// <returns></returns>
        public string Save(string argument)
        {
            AjaxResult ajaxResult = new AjaxResult();

            string errorMsg = string.Empty;
            ActionResult actionResult = ActionResult.Failed;
            string actionMessage = string.Empty;
            try
            {
                Survey survey = JsonConvert.DeserializeObject<Survey>(argument);
                survey.ID = CurrentId;
                using (ITransaction trans = UnitOfWork.BeginTransaction(typeof(Survey)))
                {
                    surveyService.Update(survey);
                    //修改评估人
                    IDictionary<string, object> dic = new Dictionary<string, object>();
                    dic.Add("SurveyID", survey.ID);
                    IList<SurveyResult> surveyResultList = surveyResultService.FindAll(dic);
                    foreach (var item in surveyResultList)
                    {
                        item.EntTime = survey.EndTime;
                        item.RemainTime = survey.LimitTime*60;
                        surveyResultService.Update(item);
                    }
                    trans.Commit();
                }
                actionResult = ActionResult.Success;

                //获取提示信息
                actionMessage = RemarkAttribute.GetEnumRemark(actionResult);

                //记录操作日志
                AddActionLog(survey, PageContext.Action, actionResult, actionMessage);

                ajaxResult.ActionResult = actionResult;
                ajaxResult.RetValue = survey.ID;
                ajaxResult.PromptMsg = actionMessage;
            }
            catch (Exception ex)
            {
                actionMessage = RemarkAttribute.GetEnumRemark(actionResult);
                log.Error(actionMessage, ex);
            }

            return JsonConvert.SerializeObject(ajaxResult);
        }

        /// <summary>
        /// 保存答题人
        /// </summary>
        /// <param name="argument"></param>
        /// <returns></returns>
        public string SaveTester(string argument)
        {
            AjaxResult ajaxResult = new AjaxResult();
            SurveyResult surveyResult=new SurveyResult();

            string errorMsg = string.Empty;
            ActionResult actionResult = ActionResult.Failed;
            string actionMessage = string.Empty;
            try
            {

                string userIDs = Request.Form["UserIDs"];
                userIDs = userIDs.Substring(0, userIDs.Length - 1);
                string endTime = Request.Form["EndTime"];
                string limitTime = Request.Form["LimitTime"];
              
                IList<SurveyResult> surveyResults = new List<SurveyResult>();
                if (!string.IsNullOrWhiteSpace(userIDs))
                {
                    IList<string> parameters = userIDs.Split(',').ToList();
                    
                    surveyResults = parameters.Select(p => new SurveyResult()
                    {
                        ID = IdGenerator.NewComb().ToSafeString(),
                        RemainTime = limitTime.ToInt(),
                        EntTime = endTime.ToDateTime(),
                        OwnerOrg = User.OrgPath,
                        SurveyID = CurrentId,
                        Tester = p,
                        IsLock = 0
                    }).ToList();
                }

                surveyResultService.SaveSurveyResults(CurrentId, surveyResults);
                actionResult = ActionResult.Success;

                //获取提示信息
                actionMessage = RemarkAttribute.GetEnumRemark(actionResult);

                //记录操作日志
                AddActionLog(surveyResult, PageContext.Action, actionResult, actionMessage);

                ajaxResult.ActionResult = actionResult;
                ajaxResult.RetValue = userIDs; //survey.ID;
                ajaxResult.PromptMsg = actionMessage;
            }
            catch (Exception ex)
            {
                actionMessage = RemarkAttribute.GetEnumRemark(actionResult);
                log.Error(actionMessage, ex);
            }

            return JsonConvert.SerializeObject(ajaxResult);
        }

        /// <summary>
        /// 解锁加锁
        /// </summary>
        /// <param name="argument"></param>
        /// <returns></returns>
        public string ChangeLock(string argument)
        {
            AjaxResult ajaxResult = new AjaxResult();
           
            string errorMsg = string.Empty;
            ActionResult actionResult = ActionResult.Failed;
            string actionMessage = string.Empty;
            try
            {
                string surveyResultID = Request.Form["SurveyResultID"];
                SurveyResult surveyResult = surveyResultService.GetDomain(surveyResultID);
                if (surveyResult != null)
                {
                    if (surveyResult.IsLock == 0)
                        surveyResult.IsLock = 1;
                    else
                        surveyResult.IsLock = 0;
                    surveyResultService.Update(surveyResult);
                    actionResult = ActionResult.Success;
                }



                //获取提示信息
                actionMessage = RemarkAttribute.GetEnumRemark(actionResult);

                //记录操作日志
                AddActionLog(surveyResult, PageContext.Action, actionResult, actionMessage);

                ajaxResult.ActionResult = actionResult;
                ajaxResult.RetValue = surveyResult.IsLock;
                ajaxResult.PromptMsg = actionMessage;
            }
            catch (Exception ex)
            {
                actionMessage = RemarkAttribute.GetEnumRemark(actionResult);
                log.Error(actionMessage, ex);
            }

            return JsonConvert.SerializeObject(ajaxResult);
        }

        /// <summary>
        /// 发布测试
        /// </summary>
        /// <param name="argument"></param>
        /// <returns></returns>
        public string Publicshed(string argument)
        {
            AjaxResult ajaxResult = new AjaxResult();

            string errorMsg = string.Empty;
            ActionResult actionResult = ActionResult.Failed;
            string actionMessage = string.Empty;
            try
            {
                Survey survey = surveyService.GetDomain(argument);
                if (survey != null)
                {
                    survey.Status = 1;
                    surveyService.Update(survey);
                    actionResult = ActionResult.Success;
                }

                //获取提示信息
                actionMessage = RemarkAttribute.GetEnumRemark(actionResult);

                //记录操作日志
                AddActionLog(survey, PageContext.Action, actionResult, actionMessage);

                ajaxResult.ActionResult = actionResult;
                ajaxResult.RetValue = survey.ID;
                ajaxResult.PromptMsg = actionMessage;
            }
            catch (Exception ex)
            {
                actionMessage = RemarkAttribute.GetEnumRemark(actionResult);
                log.Error(actionMessage, ex);
            }

            return JsonConvert.SerializeObject(ajaxResult);
        }

        /// <summary>
        /// 删除答题人 
        /// </summary>
        /// <param name="argument"></param>
        /// <returns></returns>
        public string DelTester(string argument)
        {
            SurveyResult surveyResult = null;
            AjaxResult ajaxResult = new AjaxResult();

            string errorMsg = string.Empty;
            ActionResult actionResult = ActionResult.Failed;
            string actionMessage = string.Empty;
            try
            {
                argument=argument.Substring(0,argument.Length-1);
                string[] ids = argument.Split(',');
                foreach (string id in ids)
                {
                    surveyResult = surveyResultService.GetDomain(id);

                    if (surveyResult != null)
                    {
                        surveyResultService.Delete(surveyResult);
                    }
                }

                actionResult = ActionResult.Success;
                //获取提示信息
                actionMessage = RemarkAttribute.GetEnumRemark(actionResult);

                //记录操作日志
                AddActionLog(surveyResult, PageContext.Action, actionResult, actionMessage);

                ajaxResult.ActionResult = actionResult;
                ajaxResult.RetValue = argument;
                ajaxResult.PromptMsg = actionMessage;
            }
            catch (Exception ex)
            {
                actionMessage = RemarkAttribute.GetEnumRemark(actionResult);
                log.Error(actionMessage, ex);
            }

            return JsonConvert.SerializeObject(ajaxResult);
        }

        /// <summary>
        /// 刷新
        /// </summary>
        /// <returns></returns>
        public string RefreshGrid(string argument)
        {
            AjaxResult ajaxResult = new AjaxResult();

            string errorMsg = string.Empty;
            ActionResult actionResult = ActionResult.Failed;
            string actionMessage = string.Empty;
            try
            {
                int pageIndex=argument==null ? 1:argument.ToInt();
                var pageInfo = new PageInfo(pageIndex, gvList.PageSize, 0);
                DataTable dt = surveyResultService.GetSurveyResult(CurrentId, pageInfo);
                if (dt.Rows.Count==0)
                {
                    actionResult = ActionResult.Other;
                    actionMessage = "返回数据为空";
                    ajaxResult.RetValue = null;
                }
                else
                {
                    int rowsCount = dt.Rows.Count;
                    int pageCout = pageInfo.ItemCount % pageInfo.PageSize == 0 ? (pageInfo.ItemCount / pageInfo.PageSize).ToInt() : (pageInfo.ItemCount / pageInfo.PageSize + 1).ToInt();

                    actionResult = ActionResult.Success;

                    //获取提示信息
                    actionMessage = RemarkAttribute.GetEnumRemark(actionResult);

                    var ret = new
                    {
                        total = pageCout, //总页数
                        pageIndex = pageInfo.PageIndex,  //当前页
                        pageSize = pageInfo.PageSize, //每页条数
                        ItemCount = pageInfo.ItemCount, //总条数                        
                        rows = dt.ToList<SurveyTester>()
                    };
                    ajaxResult.RetValue = ret;
                }

                ajaxResult.ActionResult = actionResult;
                ajaxResult.PromptMsg = actionMessage; 

            }
            catch (Exception ex)
            {
                actionMessage = RemarkAttribute.GetEnumRemark(actionResult);
                log.Error(actionMessage, ex);
            }

            return JsonConvert.SerializeObject(ajaxResult);
        }

		#endregion
    }
}
