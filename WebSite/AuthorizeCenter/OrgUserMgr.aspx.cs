#region Description
/*================================================================================
 *  Copyright (c) SunTek.  All rights reserved.
 * ===============================================================================
 * Solution: AuthorizeCenter
 * Module:  Privilege
 * Descrption:
 * CreateDate: 2010/11/18 13:55:37
 * Author: trenhui
 * Version:1.0
 * ===============================================================================
 * History
 *
 * Update Descrption:
 * Remark:
 * Update Time:
 * Author:generated by codesmithTemplate
 * 
 * ===============================================================================*/
#endregion
using System;
using System.Collections.Generic;
using System.Linq;
using System.Web;
using System.Web.UI;
using System.Web.UI.WebControls;
using System.Reflection;

using Microsoft.Practices.Unity;
using log4net;
using EAFrame.Core;
using EAFrame.Core.Enums;
using EAFrame.Core.Service;
using EAFrame.Core.Security;
using EAFrame.Core.Extensions;
using EAFrame.Core.Web;
using EAFrame.Core.Caching;
using EAFrame.Core.FastInvoker;
using EAFrame.Core.DataFilter;
using EAFrame.WebControls;
using SunTek.EAFrame.AuthorizeCenter.Domain;
using SunTek.EAFrame.AuthorizeCenter.Service;

using Newtonsoft.Json;

namespace WebSite
{
    public partial class OrgUserMgr : BasePage
    {
        protected override void OnInit(EventArgs e)
        {
            base.OnInit(e);
            ddlRole.DataSource = new RoleService().FindAll(null);
            ddlRole.DataTextField = "Name";
            ddlRole.DataValueField = "ID";
            ddlRole.DataBind();
            ddlRole.Items.Insert(0, new ListItem("请选择", "-1"));
        }

        protected void Page_Load(object sender, EventArgs e)
        {

        }


        public string Save(string argument)
        {
            AjaxResult ajaxResult = new AjaxResult();

            try
            {
                string[] dataIDs = Request.Form["DataIDs"].Trim(',').Split(',');
                string roleID = Request.Form["RoleID"];
                short objectType =  Request.Form["ObjectType"].ToShort((short)UserType.Common);
                if (string.IsNullOrEmpty(roleID))
                {
                    ajaxResult.ActionResult = ActionResult.Failed;
                    ajaxResult.PromptMsg = "角色ID为空！";
                    log.Error("角色ID为空");
                    return JsonConvert.SerializeObject(ajaxResult);
                }

                if (dataIDs == null || dataIDs.Count() == 0)
                {
                    ajaxResult.PromptMsg = "您没有选择任何人，请选择后再保存！";
                    return JsonConvert.SerializeObject(ajaxResult);
                }


                ObjectRoleService urService = new ObjectRoleService();
                OperatorService operaterService = new OperatorService();
                EmployeeService employeeService = new EmployeeService();

                List<Operator> operators = new List<Operator>();
                List<ObjectRole> userRoles = new List<ObjectRole>();
                foreach (var dataID in dataIDs)
                {
                    IDictionary<string, object> para = new Dictionary<string, object>();
                    para.Add("ID", dataID);
                    Employee employee = employeeService.FindOne(para);

                    //IDictionary<string, object> para2 = new Dictionary<string, object>();
                    //para2.Add("EmployeeID", dataID);
                    //List<EmployeeOrg> employeeOrgs = new EmployeeOrgService().FindAll(para2).ToList();

                    Operator operatorInfo=new Operator()
                    {
                         ID=employee.ID,
                         UserType=objectType,
                         LoginName=employee.LoginName,
                         UserName=employee.Name,
                         Password="",
                         Status="0".ToShort(1),
                         Skin=Skin.ToShort(1),
                         OwnerOrg = employee.CorpID,
                         Creator=User.ID
                         
                    };
                    operators.Add(operatorInfo);

                    ObjectRole userRole = new ObjectRole()
                    {
                        ID = IdGenerator.NewComb().ToSafeString(),
                        RoleID = roleID,
                        ObjectID = dataID,
                        ObjectType = objectType

                    };

                    userRoles.Add(userRole);
                }


                urService.SaveObjectRoles(operators,userRoles);

                ajaxResult.RetValue = string.Empty;
                ajaxResult.ActionResult = ActionResult.Success;
                ajaxResult.PromptMsg = "保存成功！";

            }
            catch (Exception ex)
            {
                ajaxResult.ActionResult = ActionResult.Failed;
                ajaxResult.PromptMsg = "保存用户角色出错，请联系管理员！";
                log.Error(ex);
            }

            return JsonConvert.SerializeObject(ajaxResult);
        }




    }
}