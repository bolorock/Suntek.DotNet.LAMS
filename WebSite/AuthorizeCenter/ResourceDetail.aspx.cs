#region Description
/*================================================================================
 *  Copyright (c) SunTek.  All rights reserved.
 * ===============================================================================
 * Solution: AuthorizeCenter
 * Module:  Resource
 * Descrption:
 * CreateDate: 2010-11-2 21:27:00
 * Author: trenhui
 * Version:1.0
 * ===============================================================================
 * History
 *
 * Update Descrption:
 * Remark:
 * Update Time:
 * Author:generated by codesmithTemplate
 * 
 * ===============================================================================*/
#endregion
using System;
using System.Collections.Generic;
using System.Linq;
using System.Web;
using System.Web.UI;
using System.Web.UI.WebControls;
using System.Reflection;

using log4net;
using Newtonsoft.Json;
using Microsoft.Practices.Unity;
using EAFrame.Core;
using EAFrame.Core.Enums;
using EAFrame.Core.Service;
using EAFrame.Core.Security;
using EAFrame.Core.Extensions;
using EAFrame.Core.Web;
using EAFrame.Core.Caching;
using EAFrame.Core.Utility;
using EAFrame.Core.FastInvoker;
using EAFrame.WebControls;
using SunTek.EAFrame.AuthorizeCenter.Domain;
using SunTek.EAFrame.AuthorizeCenter.Service;
using SunTek.EAFrame.Infrastructure.Domain;
using SunTek.EAFrame.Infrastructure.Service;

namespace WebSite
{
    public partial class ResourceDetail : BasePage
    {
        private ResourceService resourceService = new ResourceService();

        #region ---界面处理方法---

        protected override void OnLoad(EventArgs e)
        {
            base.OnLoad(e);

            if (!IsPostBack && !IsAjaxPost)
                ShowPageDetail();

            PageMaster baseMaster = Master as PageMaster;
            baseMaster.IsShowNavInfo = false;
        }

        protected void ShowPageDetail()
        {
            cboType.IsSingle = true;
            cboType.BindCombox(ResourceType.Menu);

            cboOpenMode.IsSingle = true;
            cboOpenMode.BindCombox(PageOpenMode.EmbedMainFrame);
            Resource parent = null;

            if (PageContext.Action == ActionType.Add)
            {
                parent = resourceService.GetDomain(Request.QueryString["ParentID"]);
                if (parent != null)
                {
                    chbParentID.Text = parent.Text;
                    chbParentID.Value = parent.ID;

                    App parentApp = new AppService().GetDomain(parent.AppID);
                    if (parentApp != null)
                    {
                        chbAppID.Text = parentApp.Text;
                        chbAppID.Value = parentApp.ID;
                    }

                    SunTek.EAFrame.Infrastructure.Domain.Module parentModule = new ModuleService().GetDomain(parent.ModuleID);
                    if (parentModule != null)
                    {
                        chbModuleID.Text = parentModule.Text;
                        chbModuleID.Value = parentModule.ID;
                    }

                    Organization parentOrg = new OrganizationService().GetDomain(parent.OwnerOrg);
                    if (parentOrg != null)
                    {
                        chbOwnerOrg.Text = parentOrg.Name;
                        chbOwnerOrg.Value = parentOrg.ID;
                    }
                }
                return;
            }

            Resource entity = resourceService.GetDomain(CurrentId);

            if (entity == null) return;

            SetControlValues(entity);

            parent = resourceService.GetDomain(entity.ParentID);
            if (parent != null)
            {
                chbParentID.Text = parent.Text;
                chbParentID.Value = parent.ID;
            }

            SunTek.EAFrame.Infrastructure.Domain.Module module = new ModuleService().GetDomain(entity.ModuleID);
            if (module != null)
            {
                chbModuleID.Text = module.Text;
                chbModuleID.Value = module.ID;
            }

            SunTek.EAFrame.Infrastructure.Domain.App app = new AppService().GetDomain(entity.AppID);
            if (app != null)
            {
                chbAppID.Text = app.Text;
                chbAppID.Value = app.ID;
            }

            Organization org = new OrganizationService().GetDomain(entity.OwnerOrg);
            if (org != null)
            {
                chbOwnerOrg.Text = org.Name;
                chbOwnerOrg.Value = org.ID;
            }

            List<string> operateIDs = new PrivilegeService().All().Where(p => p.ResourceID == entity.ID).Select(p => p.OperateID).ToList();
            rptOperate.DataSource = new OperateService().All().Where(o => operateIDs.Contains(o.ID)).ToList();
            rptOperate.DataBind();
        }

        #endregion

        #region ---操作处理方法---
        protected Resource GetDomainObject()
        {
            Resource resource = resourceService.GetDomain(CurrentId);

            if (resource == null)
            {
                resource = new Resource();
                resource.ID = CurrentId;
            }

            GetControlValues(ref resource);

            return resource;
        }

        public string Save(string argument)
        {
            AjaxResult ajaxResult = new AjaxResult();

            string errorMsg = string.Empty;
            ActionResult actionResult = ActionResult.Failed;
            string actionMessage = string.Empty;
            try
            {
                Resource resource = JsonConvert.DeserializeObject<Resource>(argument);
                resource.ID = string.IsNullOrEmpty(CurrentId) ? CurrentId = IdGenerator.NewComb().ToString() : CurrentId;

                foreach (var operate in resource.Operates)
                {
                    operate.ID = string.IsNullOrWhiteSpace(operate.ID) ? IdGenerator.NewComb().ToString() : operate.ID;
                }
                resourceService.SaveOrUpdate(resource);
                actionResult = ActionResult.Success;

                //获取提示信息
                actionMessage = RemarkAttribute.GetEnumRemark(actionResult);

                //记录操作日志
                AddActionLog(resource, PageContext.Action, actionResult, actionMessage);

                ajaxResult.ActionResult = actionResult;
                ajaxResult.RetValue = resource.ID;
                ajaxResult.PromptMsg = actionMessage;
            }
            catch (Exception ex)
            {
                actionMessage = RemarkAttribute.GetEnumRemark(actionResult);
                log.Error(actionMessage, ex);
            }

            return JsonConvert.SerializeObject(ajaxResult);
        }
        #endregion
    }
}
