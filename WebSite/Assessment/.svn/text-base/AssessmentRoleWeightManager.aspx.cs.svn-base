#region Description
/*================================================================================
 *  Copyright (c) SunTek.  All rights reserved.
 * ===============================================================================
 * Solution: EAFrame.Assessment
 * Module:  AssessmentRole
 * Descrption:
 * CreateDate: 2011-1-27 10:50:48
 * Author: trenhui
 * Version:1.0
 * ===============================================================================
 * History
 *
 * Update Descrption:
 * Remark:
 * Update Time:
 * Author:generated by codesmithTemplate
 * 
 * ===============================================================================*/
#endregion
using System;
using System.Collections.Generic;
using System.Linq;
using System.Web;
using System.Web.UI;
using System.Web.UI.WebControls;
using System.Reflection;
using System.Data;

using Microsoft.Practices.Unity;
using log4net;
using EAFrame.Core;
using EAFrame.Core.Enums;
using EAFrame.Core.Service;
using EAFrame.Core.Security;
using EAFrame.Core.Extensions;
using EAFrame.Core.Web;
using EAFrame.Core.Caching;
using EAFrame.Core.FastInvoker;
using EAFrame.Core.DataFilter;
using EAFrame.WebControls;
using SunTek.Assessment.Domain;
using SunTek.Assessment.Service;
using Newtonsoft.Json;

namespace WebSite
{
    public partial class AssessmentRoleWeightManager : BasePage
    {
        private AssessmentRoleWeightService assessmentRoleWeightService = new AssessmentRoleWeightService();

        #region ---界面处理方法---

        /// <summary>
        /// 初始化页面
        /// </summary>
        /// <param name="e"></param>
        protected override void OnInit(EventArgs e)
        {
            base.OnInit(e);
            gvList.PageChanged += new PagedGridView.PagintEventHandler(gvList_PageChanged);
        }

        void gvList_PageChanged(object sender, PagingArgs e)
        {
            ShowList(gvList,new PageInfo(e.PageIndex, e.PageSize, e.ItemCount));
        }

        protected void Page_Load(object sender, EventArgs e)
        {
            if (!IsPostBack)
            {
                PageMaster baseMaster = Master as PageMaster;
                baseMaster.IsShowNavInfo = false;
                ShowList(gvList,new PageInfo(gvList.PageIndex, gvList.PageSize, gvList.ItemCount));
            }
        }

        #endregion

        #region ---操作处理方法---
		/// <summary>
        /// 转向明细页面
        /// </summary>
        /// <param name="param"></param>
        protected  void Redirect(string param)
        {
            var currentIdParam = PageContext.Action == ActionType.Add ? string.Empty : string.Format("&CurrentId={0}", CurrentId);
            Response.Redirect(string.Format("AssessmentRoleDetail.aspx?LastUrl={0}&Runat=1&ActionFlag={1}{2}{3}", Request.Url.PathAndQuery, PageContext.Action, currentIdParam, string.IsNullOrEmpty(param) ? param : "&" + param));
        }
		
        /// <summary>
        /// 新增
        /// </summary>
        public void Add()
        {
            PageContext.Action = ActionType.Add;
			PageContext.PageIndex = gvList.PageIndex;
            SavePageContext(PageContext);

            Redirect(string.Empty);
        }

        /// <summary>
        /// 查看
        /// </summary>
        public void View()
        {
            PageContext.Action = ActionType.View;
			PageContext.PageIndex = gvList.PageIndex;
            SavePageContext(PageContext);

            Redirect(string.Empty);
        }
		
        /// <summary>
        /// 修改
        /// </summary>
        public void Update()
        {
            PageContext.Action = ActionType.Update;
			PageContext.PageIndex = gvList.PageIndex;
            SavePageContext(PageContext);
			
            Redirect(string.Empty);
        }

        /// <summary>
        /// 刷新
        /// </summary>
        public void Refresh()
        {
            ShowList(gvList,new PageInfo(gvList.PageIndex, gvList.PageSize, gvList.ItemCount));
        }
	
		/// <summary>
        /// 显示列表信息
        /// </summary>
        /// <param name="gvList">GridView对象</param>
        /// <param name="pageInfo">分页信息</param>
        public void ShowList(PagedGridView gvList, PageInfo pageInfo)
        {
            //IPageOfList<AssessmentRole> result = assessmentRoleService.FindAll(GetFilterParameters(), pageInfo);
            //gvList.ItemCount = result.PageInfo.ItemCount;
            DataTable dt = assessmentRoleWeightService.GetRoleList(Request.QueryString["SurveyID"].ToSafeString());
            gvList.DataSource = dt;
            gvList.DataBind();
           
        }


        public string Save(string argument)
        {
            AjaxResult ajaxResult = new AjaxResult();

            string errorMsg = string.Empty;
            ActionResult actionResult = ActionResult.Failed;
            string actionMessage = string.Empty;
            try
            {
                List<AssessmentRoleWeight> roles = new List<AssessmentRoleWeight>();
                try
                {
                     roles = JsonConvert.DeserializeObject<List<AssessmentRoleWeight>>(argument);
                }
                catch (Exception ex)
                {
                    ajaxResult.PromptMsg = "权重格式有误";
                    return JsonConvert.SerializeObject(ajaxResult);
                }

                foreach (AssessmentRoleWeight r in roles)
                {
                    r.ID = IdGenerator.NewComb().ToString();
                    if (r.Weight > 100 || r.Weight < 0)
                    {
                        ajaxResult.PromptMsg = "权重范围有误";
                        return JsonConvert.SerializeObject(ajaxResult);
                    }
                }

                assessmentRoleWeightService.SaveRoleWeight(roles, Request.QueryString["SurveyID"].ToSafeString());
                actionResult = ActionResult.Success;
                //获取提示信息
                actionMessage = RemarkAttribute.GetEnumRemark(actionResult);

                //记录操作日志
                AddActionLog(roles, PageContext.Action, actionResult, actionMessage);

                ajaxResult.ActionResult = actionResult;
                ajaxResult.RetValue = Request.QueryString["Survey"].ToSafeString();
                ajaxResult.PromptMsg = actionMessage;
            }
            catch (Exception ex)
            {
                actionMessage = RemarkAttribute.GetEnumRemark(actionResult);
                log.Error(actionMessage, ex);
            }

            return JsonConvert.SerializeObject(ajaxResult);
        }

        #endregion
    }
}
