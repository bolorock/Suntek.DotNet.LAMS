#region Description
/*================================================================================
 *  Copyright (c) SunTek.  All rights reserved.
 * ===============================================================================
 * Solution: CMS
 * Module:  ContentMore
 * Descrption:
 * CreateDate: 2011/2/28
 * Author: hgq
 * Version:1.0
 * ===============================================================================
 * History
 *
 * Update Descrption:
 * Remark:
 * Update Time:
 * Author:generated by codesmithTemplate
 * 
 * ===============================================================================*/
#endregion
using System;
using System.Collections.Generic;
using System.Linq;
using System.Web;
using System.Web.UI;
using System.Web.UI.WebControls;

using log4net;
using Microsoft.Practices.Unity;
using EAFrame.Core;
using EAFrame.Core.Enums;
using EAFrame.Core.Service;
using EAFrame.Core.Security;
using EAFrame.Core.Extensions;
using EAFrame.Core.Web;
using EAFrame.Core.Caching;
using EAFrame.Core.Utility;
using EAFrame.Core.FastInvoker;
using EAFrame.WebControls;
using SunTek.Assessment.Domain;
using SunTek.Assessment.Service;
using Newtonsoft.Json;

using SunTek.CMS.Domain;
using SunTek.CMS.Service;


namespace WebSite
{
    public partial class ContentMore : BasePage
    {

        public string WidgetsCode
        {
            get
            {
                return Request["code"];
            }
        }
        public override bool Authorize(EAFrame.Core.Authentication.User user, string requestUrl, bool isForce)
        {
            return base.Authorize(user, requestUrl, false);
        }
        public string WidgetName
        {
            get
            {
                IDictionary<string, object> dic = new Dictionary<string, object>();
                dic.Add("Code",WidgetsCode);
                Widgets widget=new WidgetsService().FindOne(dic);
                if (widget != null)
                {
                    return widget.Name;
                }
                return null;
            }
        }

        private ContentManagementService contentManagementService = new ContentManagementService();
        protected void Page_Load(object sender, EventArgs e)
        {

        }

        /// <summary>
        /// 获取所有发布的内容
        /// </summary>
        /// <returns></returns>
        public string GetContentByWidetsCode()
        {
            AjaxResult ajaxResult = new AjaxResult();

            string errorMsg = string.Empty;
            ActionResult actionResult = ActionResult.Failed;
            string actionMessage = string.Empty;
            try
            {
                int pageIndex = Request["pageIndex"].ToInt();
                int pageSize=Request["pageSize"].ToInt();
                var pageInfo = new PageInfo(pageIndex, pageSize, 0);
                IList<SunTek.CMS.Domain.ContentManagement> contentManagement = contentManagementService.GetAllContentByWidgetsCode(WidgetsCode,pageInfo);

                if (contentManagement != null)
                {
                    actionResult = ActionResult.Success;

                    //获取提示信息
                    actionMessage = RemarkAttribute.GetEnumRemark(actionResult);

                    var ret = new
                    {
                        ItemCount = pageInfo.ItemCount, //总条数                        
                        rows = contentManagement
                    };

                    ajaxResult.RetValue = ret;
                }
                ajaxResult.ActionResult = actionResult;
                ajaxResult.PromptMsg = actionMessage;

            }
            catch (Exception ex)
            {
                actionMessage = RemarkAttribute.GetEnumRemark(actionResult);
                log.Error(actionMessage, ex);
            }

            return JsonConvert.SerializeObject(ajaxResult, new Newtonsoft.Json.Converters.IsoDateTimeConverter());
        }
    }
}