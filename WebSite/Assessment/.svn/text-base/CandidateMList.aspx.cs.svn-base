#region Description
/*================================================================================
 *  Copyright (c) SunTek.  All rights reserved.
 * ===============================================================================
 * Solution: AuthorizeCenter
 * Module:  Employee
 * Descrption:
 * CreateDate: 2010/11/18 13:55:37
 * Author: trenhui
 * Version:1.0
 * ===============================================================================
 * History
 *
 * Update Descrption:
 * Remark:
 * Update Time:
 * Author:generated by codesmithTemplate
 * 
 * ===============================================================================*/
#endregion
using System;
using System.Collections.Generic;
using System.Linq;
using System.Web;
using System.Web.UI;
using System.Web.UI.WebControls;
using System.Reflection;

using Microsoft.Practices.Unity;
using log4net;
using EAFrame.Core;
using EAFrame.Core.Enums;
using EAFrame.Core.Service;
using EAFrame.Core.Security;
using EAFrame.Core.Extensions;
using EAFrame.Core.Web;
using EAFrame.Core.Caching;
using EAFrame.Core.FastInvoker;
using EAFrame.Core.DataFilter;
using EAFrame.WebControls;
using SunTek.EAFrame.AuthorizeCenter.Domain;
using SunTek.EAFrame.AuthorizeCenter.Service;
using SunTek.LAMS.Domain;
using SunTek.LAMS.Service;
using EAFrame.Core.Utility;

using System.Data;

namespace WebSite
{
    public partial class CandidateMList : BasePage
    {
        private EmployeeService employeeService = new EmployeeService();
        private CandidateManagerService candidateManagerService = new CandidateManagerService();

        /// <summary>
        /// 公司 ID
        /// </summary>
        protected String CorpID
        {
            get
            {
                return string.IsNullOrEmpty(Request["corpID"]) ? String.Empty : Request["corpID"].ToString();
            }
        }

        /// <summary>
        /// 正职，副职
        /// </summary>
        protected string IsChief
        {
            get
            {
                return string.IsNullOrWhiteSpace(Request["isChief"]) ? string.Empty : Request["isChief"].ToString();
            }
        }

        /// <summary>
        /// 二级经理，三级经理
        /// </summary>
        protected string Layer
        {
            get
            {
                return string.IsNullOrWhiteSpace(Request["layer"]) ? string.Empty : Request["layer"].ToString();
            }
        }

        /// <summary>
        /// 区分省公司和分公司
        /// </summary>
        protected string Grade
        {
            get
            {
                return string.IsNullOrWhiteSpace(Request["grade"]) ? string.Empty : Request["grade"].ToString();
            }
        }

        /// <summary>
        /// 分公司，专业公司..节点
        /// </summary>
        protected string IsParent
        {
            get
            {
                return string.IsNullOrWhiteSpace(Request["parent"]) ? string.Empty : Request["parent"].ToString();
            }
        }

        #region ---界面处理方法---

        /// <summary>
        /// 初始化页面
        /// </summary>
        /// <param name="e"></param>
        protected override void OnInit(EventArgs e)
        {
            base.OnInit(e);
            gvList.PageChanged += new PagedGridView.PagintEventHandler(gvList_PageChanged);
        }

        void gvList_PageChanged(object sender, PagingArgs e)
        {
            ShowList(gvList, new PageInfo(e.PageIndex, e.PageSize, e.ItemCount));
        }

        protected void Page_Load(object sender, EventArgs e)
        {
            if (!IsPostBack)
            {
                ShowList(gvList, new PageInfo(gvList.PageIndex, gvList.PageSize, gvList.ItemCount));
            }
        }

        #endregion

        #region ---操作处理方法---
        /// <summary>
        /// 转向明细页面
        /// </summary>
        /// <param name="param"></param>
        protected void Redirect(string param)
        {
            var currentIdParam = PageContext.Action == ActionType.Add ? string.Empty : string.Format("&CurrentId={0}", CurrentId);
            Response.Redirect(string.Format("EmployeeDetail.aspx?LastUrl={0}&Runat=1&ActionFlag={1}{2}{3}", Request.Url.PathAndQuery, PageContext.Action, currentIdParam, string.IsNullOrEmpty(param) ? param : "&" + param));
        }

        /// <summary>
        /// 新增
        /// </summary>
        public void Add()
        {
            PageContext.Action = ActionType.Add;
            PageContext.PageIndex = gvList.PageIndex;
            SavePageContext(PageContext);

            Redirect(string.Empty);
        }

        /// <summary>
        /// 查看
        /// </summary>
        public void View()
        {
            PageContext.Action = ActionType.View;
            PageContext.PageIndex = gvList.PageIndex;
            SavePageContext(PageContext);

            Redirect(string.Empty);
        }

        /// <summary>
        /// 删除
        /// </summary>
        /// <param name="argument"></param>
        /// <returns></returns>
        public void Delete()
        {
            AjaxResult ajaxResult = new AjaxResult();

            string errorMsg = string.Empty;
            ActionResult actionResult = ActionResult.Failed;
            string actionMessage = string.Empty;
            try
            {
                employeeService.Delete(CurrentId);
                actionResult = ActionResult.Success;

                //获取提示信息
                actionMessage = "删除成功！";

                ajaxResult.RetValue = CurrentId;
                ajaxResult.PromptMsg = actionMessage;

                Refresh();
                ajaxResult.ActionResult = actionResult;
            }
            catch (Exception ex)
            {
                actionMessage = "删除失败 !";
                log.Error(actionMessage, ex);
            }

            WebUtil.PromptMsg(actionMessage);
        }

        /// <summary>
        /// 修改
        /// </summary>
        public void Update()
        {
            PageContext.Action = ActionType.Update;
            PageContext.PageIndex = gvList.PageIndex;
            SavePageContext(PageContext);

            Redirect(string.Empty);
        }

        /// <summary>
        /// 刷新
        /// </summary>
        public void Refresh()
        {
            ShowList(gvList, new PageInfo(gvList.PageIndex, gvList.PageSize, gvList.ItemCount));
        }

        /// <summary>
        /// 查询
        /// </summary>
        public void Search()
        {
            ShowList(gvList, new PageInfo(1, gvList.PageSize, gvList.ItemCount));
        }

        /// <summary>
        /// 显示列表信息
        /// </summary>
        /// <param name="gvList">GridView对象</param>
        /// <param name="pageInfo">分页信息</param>
        public void ShowList(PagedGridView gvList, PageInfo pageInfo)
        {
            IDictionary<string,object> parameters=GetFilterParameters();

            IPageOfList<Employee> result = null;
            DataTable dt=null;
            if (string.IsNullOrWhiteSpace(Layer))
            {
                 //加载正职,副职后备经理人
                if (string.IsNullOrWhiteSpace(IsChief) == false)
                {
                    //dt = employeeService.GetEmployeeByChief(int.Parse(IsChief), GetFilterParameters(), pageInfo);
                    dt = candidateManagerService.GetEmployee(parameters, pageInfo, isChief: int.Parse(IsChief), grade: "grade2");
                }
                else //加载所有人员
                {
                    result = employeeService.FindAll(GetFilterParameters(), pageInfo);
                    gvList.ItemCount = result.PageInfo.ItemCount;
                    gvList.DataSource = result.OrderByDescending(q=>q.CreateTime);
                    gvList.DataBind();
                    return;
                }     
            }
            else
            {
                //加载后备经理人，二级，三级节点的数据
                if (string.IsNullOrWhiteSpace(CorpID) || Grade=="1")
                {
                    //dt = employeeService.GetEmployeeByCandidate(GetFilterParameters(), Layer,CorpID);
                    dt = candidateManagerService.GetEmployee(parameters, pageInfo, layer: Layer, corpID: CorpID);
                }
                else
                {
                    if (IsParent == "1") //分公司下所有后备
                    {
                       // dt = employeeService.GetEmployeeByParent(GetFilterParameters(), Layer, CorpID);
                        dt = candidateManagerService.GetEmployee(parameters, pageInfo, isChief:0, grade: "grade" + Layer, corpID: CorpID);
                    }
                    else //部门下所有后备
                    {
                       // dt = employeeService.GetEmployeeByCorpID(GetFilterParameters(), Layer, CorpID);
                        dt = candidateManagerService.GetEmployee(parameters, pageInfo, isChief: 0, layer: Layer, corpID: CorpID);
                    }
                }
            }
            gvList.ItemCount = pageInfo.ItemCount;
            gvList.DataSource = dt;
            gvList.DataBind();
        }
        #endregion
    }
}
